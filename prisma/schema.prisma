generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int            @id @default(autoincrement())
  email    String         @unique
  name     String
  password String
  proUser  Boolean        @default(false)
  games    UsersOnGames[]
}

model WordCategory {
  id            Int     @id @default(autoincrement())
  name          String  @unique
  description   String
  isProCategory Boolean @default(false)
  words         Word[]
  games         Game[]  @relation("CategoriesOnGames")
}

model Word {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  category     WordCategory  @relation(fields: [categoryId], references: [id])
  categoryId   Int
  translations Translation[]
}

model Translation {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  word        Word     @relation(fields: [wordId], references: [id])
  wordId      Int
  language    Language @relation(fields: [languageId], references: [id])
  languageId  Int
}

model Language {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  description  String
  translations Translation[]
}

model Game {
  id             Int            @id @default(autoincrement())
  name           String         @unique
  code           String         @unique
  status         GameStatus     @default(CREATED)
  wordCategories WordCategory[] @relation("CategoriesOnGames")
  users          UsersOnGames[]
}

enum GameStatus {
  CREATED
  IN_PROGRESS
  FINISHED
}

model UsersOnGames {
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  isHost Boolean @default(false)
  game   Game    @relation(fields: [gameId], references: [id])
  gameId Int

  @@id([userId, gameId])
}
